# set using which pipeline as default.
[pipeline]
# type : bool
# if false, use complex lighting pipeline.
# if true, use simple lighting pipeline,
#   only unblured ssao active.
simply-lit = false

# about screen space ambient occlusion.
[ssao]
# type : float
# length of the vector for nearest point calculating.
radius = 6.0
# type : float
# the range about effective occlusion.
range-start = 3.0
# type : float
# the range about effective occlusion.
range-end = 15.0
# type : float
# the min value for valid delta depth.
epsilon = 5.0
# type : uint
# gauss bluring count.
blur-count = 4

# about basic sampler setting for albedo texture etc.
[sampler]
# type : uint, valid range : [0, 3]
# 0 : D3D11_FILTER_MIN_MAG_MIP_POINT
# 1 : D3D11_FILTER_MIN_MAG_MIP_LINEAR
# 2 : D3D11_FILTER_ANISOTROPIC_8X
# 3 : D3D11_FILTER_ANISOTROPIC_16X
filter-level = 3

# about particle effect setting.
[particle]
# type : bool
# whether disable particle effect or not.
# particle processing is quite heavy but
#   play an important role in game vision.
disable-particle = false

# about bloom effect setting.
[bloom]
# type : bool
# whether disable bloom effect or not.
disable-bloom = false
# type : float
# the threshold luminous to calculate bloom.
min-luminous = 2.0
# type : uint, valid range : [2, 8]
# affect downsampling and mips level count.
downsampling-count = 7
# type : uint
# gauss bluring count for each level's downsampling,
#   final bluring count would be
#   "downsampling-count" * "downsampling-blur-count".
downsampling-blur-count = 2
# type : uint
# gauss bluring kernel's size,
#   with radius as ((int)"gauss-kernel-size" / 2).
gauss-kernel-size = 5
# type : float, valid range : [0.0, +inf)
# gauss bluring's sigma, each weight goes
#   more average when this value gets bigger.
gauss-sigma = 1.0
# type : float
# this factor affects on final bloom intensity.
intensity-factor = 1.0
# type : float, valid range : [0.0, 1.0]
# this factor affects on attenuation about each point light.
light-source-factor = 0.02

# about dynamic exposure setting.
[exposure]
# type : float, valid range : [0.0 , 1.0]
# the speed of exposure transform,
#   as lerp(old, new, "trans-speed").
trans-speed = 0.05
# type : float, valid range : [0.0 , +inf)
# the range of dynamic exposure,
#   as clamp(expo, "min-value", "max-value").
min-value = 0.01
max-value = 10.0
# type : float, valid range : (0.0, +inf)
# the factor to decide curve of adapted luminance to exposure,
#   scene goes brighter when this value get samller,
#   as (1 / "inverse-factor" / lumin).
inverse-factor = 25.0
